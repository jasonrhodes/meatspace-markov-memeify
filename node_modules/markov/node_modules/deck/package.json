{
  "name": "deck",
  "description": "Uniform and weighted shuffling and sampling",
  "version": "0.0.4",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/node-deck.git"
  },
  "main": "./index.js",
  "keywords": [
    "shuffle",
    "sample",
    "normalize",
    "pick",
    "choose",
    "cards",
    "weights"
  ],
  "directories": {
    "lib": ".",
    "example": "./example"
  },
  "scripts": {
    "test": "expresso"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "devDependencies": {
    "expresso": ">=0.7.0"
  },
  "license": "MIT/X11",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "readme": "deck\n====\n\nUniform and weighted shuffling and sampling for node.\n\nexamples\n========\n\nuniform shuffle\n---------------\n\nshuffle.js:\n\n    var deck = require('deck');\n    var xs = deck.shuffle([ 1, 2, 3, 4 ]);\n    console.log(xs);\n\noutput:\n\n    $ node shuffle.js \n    [ 1, 4, 2, 3 ]\n\nuniform sample\n--------------\n\npick.js:\n\n    var deck = require('deck');\n    var x = deck.pick([ 1, 2, 3, 4 ]);\n    console.log(x);\n\noutput:\n\n    $ node pick.js \n    2\n\nweighted shuffle\n----------------\n\nwshuffle.js:\n\n    var deck = require('deck');\n    var xs = deck.shuffle({\n        a : 10,\n        b : 8,\n        c : 2,\n        d : 1,\n        e : 1,\n    });\n    console.log(xs);\n\noutput:\n\n    $ node wshuffle.js \n    [ 'b', 'a', 'c', 'd', 'e' ]\n\nweighted sample\n---------------\n\nwpick.js:\n\n    var deck = require('deck');\n    var x = deck.pick({\n        a : 10,\n        b : 8,\n        c : 2,\n        d : 1,\n        e : 1,\n    });\n    console.log(x);\n\noutput:\n\n    $ node wpick.js \n    a\n\nmethods\n=======\n\nNote: both `deck(xs).pick()` and `deck.pick(xs)` styles work.\n\ndeck.shuffle(xs)\n----------------\n\nReturn a new shuffled `xs` without mutating the original.\n\nIf `xs` is an Array, return a new shuffled Array based on a unifrom\ndistribution.\n\nOtherwise if `xs` is an object, return a new shuffled Array of `xs`'s visible\nkeys based on the value weights of `xs`.\n\ndeck.pick(xs)\n-------------\n\nSample `xs` without mutating `xs`.\n\nIf `xs` is an Array, return a random element from `xs` with a uniform\ndistribution.\n\nOtherwise if `xs` is an object, return a random key from `xs` biased by its\nnormalized value.\n\ndeck.normalize(xs)\n------------------\n\nReturn a new `xs` object where the values have been divided by the sum of all\nthe values such that the sum of all the values in the return object is 1.\n\nIf any weights are `< 0` normalize throws an error.\n\ninstallation\n============\n\nWith [npm](http://npmjs.org):\n\n    npm install deck\n",
  "readmeFilename": "README.markdown",
  "bugs": {
    "url": "https://github.com/substack/node-deck/issues"
  },
  "homepage": "https://github.com/substack/node-deck",
  "_id": "deck@0.0.4",
  "dist": {
    "shasum": "333556883f4f26a734f63083957c22ec2b22d479"
  },
  "_from": "deck@>=0.0.3",
  "_resolved": "https://registry.npmjs.org/deck/-/deck-0.0.4.tgz"
}
